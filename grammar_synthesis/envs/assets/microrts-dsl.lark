// EBNF grammar for the MicroRTS DSL introduced in Mari√±o et al. (2021) 
// Modified to remove null ambiguity and disallow empty programs/blocks 


// A program consists of a (non-empty) sequence of blocks 
program: block program | block

// A block could either be a sequence of clauses, an if-then-else statement, or a for loop 
?block: clause_block
    | conditional_block 
    | loop_block

// An if-then-else statement contains a boolean expression and and an inner clause block 
// No other construct is permitted inside a conditional block 
conditional_block: "if (" bool_expr ") then {" clause_block "} else {" clause_block "}" 
    | "if (" bool_expr ") then {" clause_block "}"

// A for-loop loops over every available unit 
// The for-loop body may contain a clause block or a conditional block, but nothing else; it may not be empty either 
loop_block: "for (each unit u) {" loop_body "}"

loop_body: clause_block loop_body
    | conditional_block loop_body
    | clause_block
    | conditional_block

bool_expr: "not" bool | bool

// A clause block is a non-empty sequence of clauses that are executed in order by a unit 
clause_block: clause clause_block
    | clause

// Domain-dependent boolean statements corresponding to useful checks a unit might want to perform when taking actions 
bool: B1 
    | B2
    | B3

B1: "b1"
B2: "b2"
B3: "b3"
    
// Domain-dependent clauses that correspond to actions that can be taken by units in MicroRTS 
clause: C1 
    | C2
    | C3

C1: "c1"
C2: "c2"
C3: "c3"

IF_LPAREN: "if ("
RPAREN_THEN_LBRACE: ") then {"
RBRACE_ELSE_LBRACE: "} else {"
RBRACE: "}"
FOR_LPAREN_EACH_UNIT_U_RPAREN_LBRACE: "for (each unit u) {"
NOT: "not"

%import common.WS
%ignore WS